- name: get Ubuntu version
  shell: uname -r
  register: ubuntu_version
  tags: [docker]

- name: get Ubuntu Distribution Release Symbol
  shell: lsb_release -cs
  register: ansible_distribution_release
  tags: [docker]

- name: Debian python-pip is present
  apt:  
    name: python-pip
    state: present
    force: yes
  tags: [docker]

- name: Install Docker python required packages
  pip: name={{ item }} state=present
  with_items: 
    - urllib3
    - pyOpenSSL
    - ndg-httpsclient
    - pyasn1
  tags: [docker]


- name: Install Docker required packages
  apt: name={{ item }} state=present
  with_items:    
    # - "linux-image-extra-{{ ubuntu_version.stdout }}"
    # - linux-image-extra-virtual
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
  tags: [docker]  

- name: Import Docker CE repository gpg key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
  tags: [docker]

- name: Add Docker CE repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release.stdout }} stable"
    state: present
  tags: [docker]

- name: Install Docker CE
  apt:
    name: docker-ce
    state: present
    update_cache: yes
  notify: restart docker
  tags: [docker]



- name: Debian docker-py is present
  pip:
    name: docker-py
    version: 1.10.6
    state: present
  tags: [docker]

- name: Debian files are present
  template:
    src: "{{ docker_cfg }}"
    dest: "{{ docker_cfg_dest }}"
  register: copy_result
  tags: [docker]

- name: Debian Daemon is reloaded
  command: systemctl daemon-reload
  when: copy_result|changed and is_systemd is defined
  tags: [docker]

- name: vagrant user is added to the docker group
  user:
    name: vagrant
    group: docker
  register: user_result
  tags: [docker]

- name: Debian Docker service is restarted
  service:
    name: docker
    state: restarted
  when: copy_result|changed or user_result|changed
  tags: [docker]

- name: DockerUI is running
  docker_container:
    restart_policy: always
    image: uifd/ui-for-docker
    name: dockerui
    ports: 9000:9000
    privileged: yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  when: not skip_ui is defined
  tags: [docker]
